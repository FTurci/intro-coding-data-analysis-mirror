{"title":"Add some decoration","markdown":{"yaml":{"title":"Add some decoration","jupyter":"python3"},"headingText":"Decorate a tree","containsRefs":false,"markdown":"\n\n\n\nThere are two options below of template plots to build upon: a tree and a snowman.\n\nAs a group, decorate an image (or multiple images) and when completed you can save this figure to file (uncomment the appropriate cell to do so). This can then be downloaded from Noteable and uploaded to the Padlet with your group name:\n\nhttps://uob.padlet.org/fturci/adding-decorations-zk4khqfwj17l2377\n\n\nThe code below creates the outline of a tree which you can add your decoration to:\n\n```{python}\n### Code to create the template ###\n# Modify this code if you wish but this creates your background template\n\nimport numpy as np \nimport matplotlib.pyplot as plt\n\nplt.rcdefaults()         # Set axes labels to be default style\nfig, ax = plt.subplots()\nplt.xkcd()               # Set xkcd (sketch style) for everything else\n\n## Define parameters for the tree\ntree_x = [1.0, 2.0, 3.0]\ntree_y = [1.0, 5.0, 1.0]\ntree_colour = \"green\"\n\ntree = list(zip(tree_x,tree_y)) # create [x,y] pairs for Polygon function\n\n## Define parameters for the tree trunk\ntrunk_x = [1.8, 1.8, 2.2, 2.2]\ntrunk_y = [0.0, 1.0, 1.0, 0.0]\ntrunk_colour = \"brown\"\n\ntrunk = list(zip(trunk_x,trunk_y)) # create [x,y] pairs for Polygon function\n\n## Plot the both aspects of the tree (using Polygon patches)\n# Set zorder to make sure any other features are on top of this\nt1 = plt.Polygon(tree, color=tree_colour,zorder=-1)\nax.add_patch(t1)\n\nt2 = plt.Polygon(trunk, color=trunk_colour,zorder=-2)\nax.add_patch(t2)\n\n## Limit the plotting area\nax.set_xlim([0,4])\nax.set_ylim([0,5.5])\n\n#### ADD ADDITIONAL FEATURES BELOW ####\n\n\n```\n\n```{python}\n## To save the figure to file - uncomment the code below\n#fig.savefig(\"my_decorated_tree.png\")\n```\n\n---\n\n## Decorate a snowman\n\nAs an alternative, the code below creates the outline of a snowman which you can add features to:\n\n```{python}\n### Code to create the template ###\n# Modify this code if you wish but this creates your background template\n\nimport numpy as np \nimport matplotlib.pyplot as plt\n\nplt.rcdefaults()         # Set axes labels to be default style\nfig, ax = plt.subplots()\nplt.xkcd()               # Set xkcd (sketch style) for everything else\nax.set_aspect(\"equal\")   # Make x aspect = y aspect so circles are not squashed\n\nax.set_facecolor(\"xkcd:navy blue\") # Set colour of plotting area\n\n## Define details for the snowman\nsnowman_centre = [(2.0, 0.4), (2.0, 1.4), (2.0, 2.2)]\nsnowman_colour = \"white\"\nsnowman_radius = [0.6, 0.5, 0.4]\n\n## Plot the snowman (using Circle patches)\n# Set zorder to make sure any other features are on top of this\nt1 = plt.Circle(snowman_centre[0], snowman_radius[0], color=snowman_colour,zorder=-3)\nt2 = plt.Circle(snowman_centre[1], snowman_radius[1], color=snowman_colour,zorder=-2)\nt3 = plt.Circle(snowman_centre[2], snowman_radius[2], color=snowman_colour,zorder=-1)\n\nax.add_patch(t1)\nax.add_patch(t2)\nax.add_patch(t3)\n\n## Limit the plotting area\nax.set_xlim([0,4])\nax.set_ylim([0,4])\n\n#### ADD ADDITIONAL FEATURES BELOW ####\n\n\n\n\n\n\n\n\n```\n\n```{python}\n## To save the figure to file - uncomment the code below\n#fig.savefig(\"my_decorated_snowman.png\")\n```\n\n---\n\n### Some options in matplotlib\n\nHere are some examples of some `matplotlib` options and functionality that you could use:\n\n```{python}\n# Lines to set up the plot\nplt.rcdefaults()\nfig2, ax2 = plt.subplots()\nplt.xkcd()\n\n## You can add points using the `scatter(x, y)` function setting:\n## the colour (`color`), point size (`s`) and shape (`marker`)\nax2.scatter([2.0],[2.9],color=\"magenta\",marker=\"o\",s=30)\nax2.scatter([2.5, 1.5],[2.5, 2.5],color=\"red\",marker=\"*\",s=400)\n\n\n## Or you can add lines using the `plot(x, y)` function setting:\n## the colour (`color`), line width (`linewidth`) and line style (`linestyle`)\nax2.plot([1.2,2.8],[3.2,2.8],color=\"yellow\",linewidth=\"2\",linestyle=\"-\")\nax2.plot([1.2,2.8],[1.9,2.1],color=\"blue\",linewidth=\"10\",linestyle=\":\")\n\n\n## Or add a patch such as a rectangle (using `plt.Rectangle` definition)\n## or `plt.Polygon()` or `plt.Circle()` as defined in previous cells.\n# plt.Rectangle((x, y), width, height, angle, color=color)\nrectangle = plt.Rectangle((1.9,2.2), width=0.2, height=0.2, color=\"#660033\")\nax2.add_patch(rectangle)\n```\n\n### More options\n\nColour options:\n- https://matplotlib.org/3.1.0/gallery/color/named_colors.html\n\nMarker and line style options:\n - https://matplotlib.org/stable/api/markers_api.html\n - https://matplotlib.org/stable/gallery/lines_bars_and_markers/linestyles.html\n\nPatches (Rectangle, Circle, Polygon)\n - https://matplotlib.org/stable/api/_as_gen/matplotlib.patches.Rectangle.html\n - https://matplotlib.org/stable/api/_as_gen/matplotlib.patches.Polygon.html\n - https://matplotlib.org/stable/api/_as_gen/matplotlib.patches.Circle.html\n \n \nOr look in the matplotlib gallery to see if anything provides inspiration:\n - https://matplotlib.org/stable/gallery/index.html\n\n---\n\n**Extra Challenge**: can you use *random number generation* to add detail to your picture?\n\n","srcMarkdownNoYaml":"\n\n\n\nThere are two options below of template plots to build upon: a tree and a snowman.\n\nAs a group, decorate an image (or multiple images) and when completed you can save this figure to file (uncomment the appropriate cell to do so). This can then be downloaded from Noteable and uploaded to the Padlet with your group name:\n\nhttps://uob.padlet.org/fturci/adding-decorations-zk4khqfwj17l2377\n\n## Decorate a tree\n\nThe code below creates the outline of a tree which you can add your decoration to:\n\n```{python}\n### Code to create the template ###\n# Modify this code if you wish but this creates your background template\n\nimport numpy as np \nimport matplotlib.pyplot as plt\n\nplt.rcdefaults()         # Set axes labels to be default style\nfig, ax = plt.subplots()\nplt.xkcd()               # Set xkcd (sketch style) for everything else\n\n## Define parameters for the tree\ntree_x = [1.0, 2.0, 3.0]\ntree_y = [1.0, 5.0, 1.0]\ntree_colour = \"green\"\n\ntree = list(zip(tree_x,tree_y)) # create [x,y] pairs for Polygon function\n\n## Define parameters for the tree trunk\ntrunk_x = [1.8, 1.8, 2.2, 2.2]\ntrunk_y = [0.0, 1.0, 1.0, 0.0]\ntrunk_colour = \"brown\"\n\ntrunk = list(zip(trunk_x,trunk_y)) # create [x,y] pairs for Polygon function\n\n## Plot the both aspects of the tree (using Polygon patches)\n# Set zorder to make sure any other features are on top of this\nt1 = plt.Polygon(tree, color=tree_colour,zorder=-1)\nax.add_patch(t1)\n\nt2 = plt.Polygon(trunk, color=trunk_colour,zorder=-2)\nax.add_patch(t2)\n\n## Limit the plotting area\nax.set_xlim([0,4])\nax.set_ylim([0,5.5])\n\n#### ADD ADDITIONAL FEATURES BELOW ####\n\n\n```\n\n```{python}\n## To save the figure to file - uncomment the code below\n#fig.savefig(\"my_decorated_tree.png\")\n```\n\n---\n\n## Decorate a snowman\n\nAs an alternative, the code below creates the outline of a snowman which you can add features to:\n\n```{python}\n### Code to create the template ###\n# Modify this code if you wish but this creates your background template\n\nimport numpy as np \nimport matplotlib.pyplot as plt\n\nplt.rcdefaults()         # Set axes labels to be default style\nfig, ax = plt.subplots()\nplt.xkcd()               # Set xkcd (sketch style) for everything else\nax.set_aspect(\"equal\")   # Make x aspect = y aspect so circles are not squashed\n\nax.set_facecolor(\"xkcd:navy blue\") # Set colour of plotting area\n\n## Define details for the snowman\nsnowman_centre = [(2.0, 0.4), (2.0, 1.4), (2.0, 2.2)]\nsnowman_colour = \"white\"\nsnowman_radius = [0.6, 0.5, 0.4]\n\n## Plot the snowman (using Circle patches)\n# Set zorder to make sure any other features are on top of this\nt1 = plt.Circle(snowman_centre[0], snowman_radius[0], color=snowman_colour,zorder=-3)\nt2 = plt.Circle(snowman_centre[1], snowman_radius[1], color=snowman_colour,zorder=-2)\nt3 = plt.Circle(snowman_centre[2], snowman_radius[2], color=snowman_colour,zorder=-1)\n\nax.add_patch(t1)\nax.add_patch(t2)\nax.add_patch(t3)\n\n## Limit the plotting area\nax.set_xlim([0,4])\nax.set_ylim([0,4])\n\n#### ADD ADDITIONAL FEATURES BELOW ####\n\n\n\n\n\n\n\n\n```\n\n```{python}\n## To save the figure to file - uncomment the code below\n#fig.savefig(\"my_decorated_snowman.png\")\n```\n\n---\n\n### Some options in matplotlib\n\nHere are some examples of some `matplotlib` options and functionality that you could use:\n\n```{python}\n# Lines to set up the plot\nplt.rcdefaults()\nfig2, ax2 = plt.subplots()\nplt.xkcd()\n\n## You can add points using the `scatter(x, y)` function setting:\n## the colour (`color`), point size (`s`) and shape (`marker`)\nax2.scatter([2.0],[2.9],color=\"magenta\",marker=\"o\",s=30)\nax2.scatter([2.5, 1.5],[2.5, 2.5],color=\"red\",marker=\"*\",s=400)\n\n\n## Or you can add lines using the `plot(x, y)` function setting:\n## the colour (`color`), line width (`linewidth`) and line style (`linestyle`)\nax2.plot([1.2,2.8],[3.2,2.8],color=\"yellow\",linewidth=\"2\",linestyle=\"-\")\nax2.plot([1.2,2.8],[1.9,2.1],color=\"blue\",linewidth=\"10\",linestyle=\":\")\n\n\n## Or add a patch such as a rectangle (using `plt.Rectangle` definition)\n## or `plt.Polygon()` or `plt.Circle()` as defined in previous cells.\n# plt.Rectangle((x, y), width, height, angle, color=color)\nrectangle = plt.Rectangle((1.9,2.2), width=0.2, height=0.2, color=\"#660033\")\nax2.add_patch(rectangle)\n```\n\n### More options\n\nColour options:\n- https://matplotlib.org/3.1.0/gallery/color/named_colors.html\n\nMarker and line style options:\n - https://matplotlib.org/stable/api/markers_api.html\n - https://matplotlib.org/stable/gallery/lines_bars_and_markers/linestyles.html\n\nPatches (Rectangle, Circle, Polygon)\n - https://matplotlib.org/stable/api/_as_gen/matplotlib.patches.Rectangle.html\n - https://matplotlib.org/stable/api/_as_gen/matplotlib.patches.Polygon.html\n - https://matplotlib.org/stable/api/_as_gen/matplotlib.patches.Circle.html\n \n \nOr look in the matplotlib gallery to see if anything provides inspiration:\n - https://matplotlib.org/stable/gallery/index.html\n\n---\n\n**Extra Challenge**: can you use *random number generation* to add detail to your picture?\n\n"},"formats":{"live-html":{"identifier":{"display-name":"HTML","target-format":"live-html","base-format":"html","extension-name":"live"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":true,"eval":true,"cache":true,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[],"notebook-links":true,"shortcodes":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","filters":["/Users/ft14968/Repos/intro-coding-data-analysis/quarto/_extensions/r-wasm/live/live.lua"],"include-in-header":{"text":"<meta name=\"robots\" content=\"noindex, nofollow\">\n"},"css":["../styles.css"],"toc":true,"toc-depth":3,"highlight-style":"github","number-sections":false,"output-file":"fun_matplotlib_decoration.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.31","ojs-engine":true,"revealjs-plugins":[],"theme":"cosmo","toc-location":"right","code-copy":true,"grid":{"sidebar-width":"350px"},"title":"Add some decoration","jupyter":"python3"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["live-html"]}
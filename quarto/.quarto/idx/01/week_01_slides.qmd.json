{"title":"Introduction to Coding and Data Analysis for Scientists","markdown":{"yaml":{"title":"Introduction to Coding and Data Analysis for Scientists","jupyter":"python3"},"headingText":"Week 1: Introduction and Data Types","containsRefs":false,"markdown":"\n\n\n\n\n## Today's Lecture\n\n - Lecture 1: Introduction and Data Types\n   - Course Structure\n   - Setting up Noteable\n   - Introduction to Coding\n   - Data Types\n   - Practical\n\n## Course Structure\n\n - This course will run for 20 weeks\n - We will cover:\n   - Data types, conditionals and loops\n   - Building functions\n   - Numpy arrays and linear algebra in python\n   - Pandas dataframes\n   - Plotting and visualisation\n - Classes:\n   - 1 lecture per week (Thursday)\n   - 1 small-group tutorial per two weeks (date should be on calendar) \n\n# About us\n\n\n- Dr Francesco Turci (Course director, School of Physics)\n    - f.turci@bristol.ac.uk\n- Dr Thomas Maullin-Sapey (lecturer, School of Mathematics)\n  - thomas.maullin-sapey@bristol.ac.uk\n\n## Lectures\n\n - The weekly lecture will consist of\n   - ≈ 30-40 minutes presentation time covering:\n   - Key concepts\n   - Administrative points (e.g. homework submission etc)\n   - Code Demonstrations#\n \n\n - ≈ 1-1.5 hours practical\n - Designed to provide hands on experience\n - Opportunity to ask for help from\n   - Lecturer\n   - PhD helpers\n   - Each other!\n\n## Assignments\n\n - Formative:\n   - Weekly (optional) assignments available on quarto\n - Summative:\n   - This module is 100% coursework\n   - 4 pieces of coursework\n   - Assignment 1 (15%)\n   - Assignment 2 (30%)\n   - Assignment 3 (15%)\n   - Assignment 4 (40%)\n - Assignments 1-3 will be exercises\n - Assignment 4 will be different\n   - Project report analysing a dataset\n\n## Online Material\n\n - The course material is available online via:\n\n   - Quarto – online searchable version\n   - Noteable – interactive interface we shall work in during class\n   \n   \n<img src=\"./images/noteable.png\" alt=\"Welcome page for the unit on Blackboard\" style=\"display:block;margin-left:auto;margin-right:auto;width:80%\"/>\n\n## Accessing Noteable\n\n - Open Blackboard\n - Go to `Introduction to Coding and Data Analysis for Scientists 2025`\n - Click `Unit Information and Resources`\n - Open Noteable\n   - Make sure `Jupyter Classic (Legacy)` is selected.\n   - Click Start\n - Click `+GitRepo`\n - Paste into Git Repository URL: `git@github.com:TomMaullin/SCIF10002-2025.git`\n - Press clone\n\n<img src=\"./images/noteable2.png\" alt=\"Welcome page for the unit on Blackboard\" style=\"display:block;margin-left:auto;margin-right:auto;width:20%\"/>\n\n## Introduction to Coding\n\n - In this module, we shall be learning to code in Python\n - Python is a programming language\n\n<img src=\"./images/python.png\" alt=\"Welcome page for the unit on Blackboard\" style=\"display:block;margin-left:auto;margin-right:auto;width:20%\"/>\n\n\n - In the same way humans communicate using different languages, there are many languages we can use to communicate with a computer\n\n - Python is particularly useful for:\n\n   - Analysing data\n   - Making plots and visualisations\n   - Running simulations\n   - Machine learning and AI\n\n```{python}\n#| slideshow: {slide_type: fragment}\ndef greet(name):\n    \"\"\"Return a friendly greeting.\"\"\"\n    return f\"Hello, {name}!\"\n\ngreet(\"Bob\")\n```\n\n## Learning to Code\n\n\n - In fact, learning to code is a lot like learning a language\n\n - When learning French, you might:\n\n   - Learn many phrases\n   - Practice writing sentences\n   - Speak to people who know the language\n - You can't learn a language by listening to other people describe it…\n - Hands-on experience and regular practice are **crucial!**\n\n\n\n## Getting Started\n\n - So… what actually is coding?\n - You can think of writing code as like writing a recipe…\n   - You might start by specifying some ingredients…\n   - Then list some instructions…\n   - To get a desired output\n - Coding is pretty similar\n \n \n<img src=\"./images/recipe.png\" alt=\"Welcome page for the unit on Blackboard\" style=\"display:block;margin-left:auto;margin-right:auto;width:20%\"/>\n\n## Getting Started\n\n - You might start by specifying some **inputs**…\n - Then list some **instructions**…\n - To get a desired **output**\n\n```{python}\n#| slideshow: {slide_type: fragment}\n# Start with two ingredients (inputs)\nx = 7\ny = 4\n\n# Step 1: Add them together\nstep1 = x + y\n\n# Step 2: Multiply the result by 2\nstep2 = step1 * 2\n\n# Step 3: Subtract y from that\nz = step2 - y\n\n# Final output\nprint(\"The final result is:\", z)\n```\n\nHere we are producing some output that might be difficult to  compute or evaluate by hand.\n\n## Assigning Variables\n\n\n```{python}\n#| slideshow: {slide_type: fragment}\nx = 7\ny = 4\n```\n\n - In this code, `x` and `y` are variables \n - These are named pieces of data which we can use for future computations\n - The `=` symbol is the assignment operator.\n   - Unlike in maths, this is an instruction\n   - E.g. `x=7` means \"Save the integer 7 under the variable name x\"\n\n## Data Types\n\n```{python}\n#| slideshow: {slide_type: fragment}\nx = 7        # an integer\ny = \"hello\"  # a string of text\nz = True     # a boolean (true/false)\n```\n\n - When writing the recipe, some foods were of the “same type”\n   - E.g. we had 2 eggs\n\n - In the same way, in coding we have different types of data\n\n - Today, we shall look at some of these\n - Understanding data types is important, as we want to use different data types for different tasks\n\n## Numeric Data Types\n\n```{python}\n#| slideshow: {slide_type: fragment}\n# Start with an integer and a float\nx = 7 # integer\ny = 3.5 # float (decimal number)\n\n# Convert integer to float\nx_as_float = float(x)\n\n# Convert float to integer\ny_as_int = int(y)\n```\n\n - The most ubiquitous data types are numeric \n   - Integers: Whole numbers/Integers\n   - ℤ = {…, -3, -2, -1, 0, 1, 2, 3,… }\n\n - Floats: Decimal numbers\n   - ℝ = Real numbers\n   - We can convert between float's and integers using the `float` and `int` functions.\n\n - What do you think might happen if we convert `y` to an integer?\n \n**Warning:** A computer cannot actually describe arbitrarily small and large numbers – it approximates instead\n\n## Strings\n\n - A string is a sequence of characters. Strings can contain: \n   - Letters\n   - Numbers (treated as characters)\n   - Punctuation\n   - Spaces\n   - Combinations of the above\n   - Nothing at all\n\n```{python}\n# Letters\nletters = \"Hello\"\n\n# Numbers (treated as characters)\nnumbers = \"12345\"\n\n# Punctuation\npunctuation = \"!?.,;;\"\n\n# Spaces\nspaces = \"   \" # three spaces\n\n# Combinations of the above\ncombo = \"Hi123?! \"\n\n# Nothing at all (an empty string)\nempty = \"\"\n```\n\n - In practice, there are many things we may want to do with text in Python\n   - Split it into sentences\n   - Search through it\n   - Replace words\n   \nAfter todays practical you will be able to perform some of these operations!\n\n## Booleans\n\n - A Boolean is  variable that can be either `True` or `False`\n - Booleans represent logical statements. \n - For instance, we might think of:\n\n   - `cat_is_black` as representing the sentence \"The cat is black\"\n   - `cat_has_four_legs` as representing the sentence \"The cat has four legs\"\n - We can use logical operators to combine Boolean statements\n   - `cat_is_black and cat_has_four_legs` represents the sentence \"The cat is black and has four legs\"\n\n```{python}\n#| slideshow: {slide_type: fragment}\ncat_is_black = True\ncat_has_four_legs = False\nprint(cat_is_black and cat_has_four_legs)\n```\n\n## Booleans\n\n\n<img src=\"./images/truth_table.png\" alt=\"Welcome page for the unit on Blackboard\" style=\"display:block;margin-left:auto;margin-right:auto;width:60%\"/>\n\n## Collections\n\n - We've now seen some simple examples of datatypes:\n   - Numeric, strings, and booleans.\n - Data types don’t always have to be this simple!\n   - Sometimes we need data types that can hold more complex information.\n - We'll see more examples throughout the course but for now we'll provide just one\n - A collection is any in-built data type that can group multiple objects together.\n - The most common collection is a list: an ordered group of items.\n   - Lists let you store, organize, and work with many values at once.\n\n```{python}\n#| slideshow: {slide_type: fragment}\n# A list of numbers\nscores = [10, 15, 20]\n\n# A List of strings\nshopping = [\"milk\", \"bread\", \"eggs\", \"cheese\"]\n\n# A mixed list (different data types together)\nmixed = [42, \"hello\"]\n```\n\n## Practical\n\n - We have students from a range of courses and backgrounds in this class\n   - Chemistry\n   - Physics\n   - Data Science\n - Some people in the room will have less experience than others\n - For the first few weeks, we shall try to account for the differences in ability where possible\n\n## Practical\n\n - We now move over to Python\n - Please open [week_01_home.ipynb](./week_01_home.qmd)\n - For the rest of today, you must work through a Python notebook\n - You have a choice of one of three options\n   - [Option 1: Beginner - Basic Data Types](week_01_intro_to_data_types_beginner.qmd)\n   - [Option 2: Intermediate - Collections](week_01_intro_to_data_types_intermediate.qmd)\n   - [Option 3: Advanced - Copying and References](week_01_intro_to_data_types_advanced.qmd)\n\n\n","srcMarkdownNoYaml":"\n\n\n## Week 1: Introduction and Data Types\n\n\n## Today's Lecture\n\n - Lecture 1: Introduction and Data Types\n   - Course Structure\n   - Setting up Noteable\n   - Introduction to Coding\n   - Data Types\n   - Practical\n\n## Course Structure\n\n - This course will run for 20 weeks\n - We will cover:\n   - Data types, conditionals and loops\n   - Building functions\n   - Numpy arrays and linear algebra in python\n   - Pandas dataframes\n   - Plotting and visualisation\n - Classes:\n   - 1 lecture per week (Thursday)\n   - 1 small-group tutorial per two weeks (date should be on calendar) \n\n# About us\n\n\n- Dr Francesco Turci (Course director, School of Physics)\n    - f.turci@bristol.ac.uk\n- Dr Thomas Maullin-Sapey (lecturer, School of Mathematics)\n  - thomas.maullin-sapey@bristol.ac.uk\n\n## Lectures\n\n - The weekly lecture will consist of\n   - ≈ 30-40 minutes presentation time covering:\n   - Key concepts\n   - Administrative points (e.g. homework submission etc)\n   - Code Demonstrations#\n \n\n - ≈ 1-1.5 hours practical\n - Designed to provide hands on experience\n - Opportunity to ask for help from\n   - Lecturer\n   - PhD helpers\n   - Each other!\n\n## Assignments\n\n - Formative:\n   - Weekly (optional) assignments available on quarto\n - Summative:\n   - This module is 100% coursework\n   - 4 pieces of coursework\n   - Assignment 1 (15%)\n   - Assignment 2 (30%)\n   - Assignment 3 (15%)\n   - Assignment 4 (40%)\n - Assignments 1-3 will be exercises\n - Assignment 4 will be different\n   - Project report analysing a dataset\n\n## Online Material\n\n - The course material is available online via:\n\n   - Quarto – online searchable version\n   - Noteable – interactive interface we shall work in during class\n   \n   \n<img src=\"./images/noteable.png\" alt=\"Welcome page for the unit on Blackboard\" style=\"display:block;margin-left:auto;margin-right:auto;width:80%\"/>\n\n## Accessing Noteable\n\n - Open Blackboard\n - Go to `Introduction to Coding and Data Analysis for Scientists 2025`\n - Click `Unit Information and Resources`\n - Open Noteable\n   - Make sure `Jupyter Classic (Legacy)` is selected.\n   - Click Start\n - Click `+GitRepo`\n - Paste into Git Repository URL: `git@github.com:TomMaullin/SCIF10002-2025.git`\n - Press clone\n\n<img src=\"./images/noteable2.png\" alt=\"Welcome page for the unit on Blackboard\" style=\"display:block;margin-left:auto;margin-right:auto;width:20%\"/>\n\n## Introduction to Coding\n\n - In this module, we shall be learning to code in Python\n - Python is a programming language\n\n<img src=\"./images/python.png\" alt=\"Welcome page for the unit on Blackboard\" style=\"display:block;margin-left:auto;margin-right:auto;width:20%\"/>\n\n\n - In the same way humans communicate using different languages, there are many languages we can use to communicate with a computer\n\n - Python is particularly useful for:\n\n   - Analysing data\n   - Making plots and visualisations\n   - Running simulations\n   - Machine learning and AI\n\n```{python}\n#| slideshow: {slide_type: fragment}\ndef greet(name):\n    \"\"\"Return a friendly greeting.\"\"\"\n    return f\"Hello, {name}!\"\n\ngreet(\"Bob\")\n```\n\n## Learning to Code\n\n\n - In fact, learning to code is a lot like learning a language\n\n - When learning French, you might:\n\n   - Learn many phrases\n   - Practice writing sentences\n   - Speak to people who know the language\n - You can't learn a language by listening to other people describe it…\n - Hands-on experience and regular practice are **crucial!**\n\n\n\n## Getting Started\n\n - So… what actually is coding?\n - You can think of writing code as like writing a recipe…\n   - You might start by specifying some ingredients…\n   - Then list some instructions…\n   - To get a desired output\n - Coding is pretty similar\n \n \n<img src=\"./images/recipe.png\" alt=\"Welcome page for the unit on Blackboard\" style=\"display:block;margin-left:auto;margin-right:auto;width:20%\"/>\n\n## Getting Started\n\n - You might start by specifying some **inputs**…\n - Then list some **instructions**…\n - To get a desired **output**\n\n```{python}\n#| slideshow: {slide_type: fragment}\n# Start with two ingredients (inputs)\nx = 7\ny = 4\n\n# Step 1: Add them together\nstep1 = x + y\n\n# Step 2: Multiply the result by 2\nstep2 = step1 * 2\n\n# Step 3: Subtract y from that\nz = step2 - y\n\n# Final output\nprint(\"The final result is:\", z)\n```\n\nHere we are producing some output that might be difficult to  compute or evaluate by hand.\n\n## Assigning Variables\n\n\n```{python}\n#| slideshow: {slide_type: fragment}\nx = 7\ny = 4\n```\n\n - In this code, `x` and `y` are variables \n - These are named pieces of data which we can use for future computations\n - The `=` symbol is the assignment operator.\n   - Unlike in maths, this is an instruction\n   - E.g. `x=7` means \"Save the integer 7 under the variable name x\"\n\n## Data Types\n\n```{python}\n#| slideshow: {slide_type: fragment}\nx = 7        # an integer\ny = \"hello\"  # a string of text\nz = True     # a boolean (true/false)\n```\n\n - When writing the recipe, some foods were of the “same type”\n   - E.g. we had 2 eggs\n\n - In the same way, in coding we have different types of data\n\n - Today, we shall look at some of these\n - Understanding data types is important, as we want to use different data types for different tasks\n\n## Numeric Data Types\n\n```{python}\n#| slideshow: {slide_type: fragment}\n# Start with an integer and a float\nx = 7 # integer\ny = 3.5 # float (decimal number)\n\n# Convert integer to float\nx_as_float = float(x)\n\n# Convert float to integer\ny_as_int = int(y)\n```\n\n - The most ubiquitous data types are numeric \n   - Integers: Whole numbers/Integers\n   - ℤ = {…, -3, -2, -1, 0, 1, 2, 3,… }\n\n - Floats: Decimal numbers\n   - ℝ = Real numbers\n   - We can convert between float's and integers using the `float` and `int` functions.\n\n - What do you think might happen if we convert `y` to an integer?\n \n**Warning:** A computer cannot actually describe arbitrarily small and large numbers – it approximates instead\n\n## Strings\n\n - A string is a sequence of characters. Strings can contain: \n   - Letters\n   - Numbers (treated as characters)\n   - Punctuation\n   - Spaces\n   - Combinations of the above\n   - Nothing at all\n\n```{python}\n# Letters\nletters = \"Hello\"\n\n# Numbers (treated as characters)\nnumbers = \"12345\"\n\n# Punctuation\npunctuation = \"!?.,;;\"\n\n# Spaces\nspaces = \"   \" # three spaces\n\n# Combinations of the above\ncombo = \"Hi123?! \"\n\n# Nothing at all (an empty string)\nempty = \"\"\n```\n\n - In practice, there are many things we may want to do with text in Python\n   - Split it into sentences\n   - Search through it\n   - Replace words\n   \nAfter todays practical you will be able to perform some of these operations!\n\n## Booleans\n\n - A Boolean is  variable that can be either `True` or `False`\n - Booleans represent logical statements. \n - For instance, we might think of:\n\n   - `cat_is_black` as representing the sentence \"The cat is black\"\n   - `cat_has_four_legs` as representing the sentence \"The cat has four legs\"\n - We can use logical operators to combine Boolean statements\n   - `cat_is_black and cat_has_four_legs` represents the sentence \"The cat is black and has four legs\"\n\n```{python}\n#| slideshow: {slide_type: fragment}\ncat_is_black = True\ncat_has_four_legs = False\nprint(cat_is_black and cat_has_four_legs)\n```\n\n## Booleans\n\n\n<img src=\"./images/truth_table.png\" alt=\"Welcome page for the unit on Blackboard\" style=\"display:block;margin-left:auto;margin-right:auto;width:60%\"/>\n\n## Collections\n\n - We've now seen some simple examples of datatypes:\n   - Numeric, strings, and booleans.\n - Data types don’t always have to be this simple!\n   - Sometimes we need data types that can hold more complex information.\n - We'll see more examples throughout the course but for now we'll provide just one\n - A collection is any in-built data type that can group multiple objects together.\n - The most common collection is a list: an ordered group of items.\n   - Lists let you store, organize, and work with many values at once.\n\n```{python}\n#| slideshow: {slide_type: fragment}\n# A list of numbers\nscores = [10, 15, 20]\n\n# A List of strings\nshopping = [\"milk\", \"bread\", \"eggs\", \"cheese\"]\n\n# A mixed list (different data types together)\nmixed = [42, \"hello\"]\n```\n\n## Practical\n\n - We have students from a range of courses and backgrounds in this class\n   - Chemistry\n   - Physics\n   - Data Science\n - Some people in the room will have less experience than others\n - For the first few weeks, we shall try to account for the differences in ability where possible\n\n## Practical\n\n - We now move over to Python\n - Please open [week_01_home.ipynb](./week_01_home.qmd)\n - For the rest of today, you must work through a Python notebook\n - You have a choice of one of three options\n   - [Option 1: Beginner - Basic Data Types](week_01_intro_to_data_types_beginner.qmd)\n   - [Option 2: Intermediate - Collections](week_01_intro_to_data_types_intermediate.qmd)\n   - [Option 3: Advanced - Copying and References](week_01_intro_to_data_types_advanced.qmd)\n\n\n"},"formats":{"live-html":{"identifier":{"display-name":"HTML","target-format":"live-html","base-format":"html","extension-name":"live"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":true,"eval":true,"cache":true,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[],"notebook-links":true,"shortcodes":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","filters":["/Users/ft14968/Repos/intro-coding-data-analysis/quarto/_extensions/r-wasm/live/live.lua"],"include-in-header":{"text":"<meta name=\"robots\" content=\"noindex, nofollow\">\n"},"css":["../styles.css"],"toc":true,"toc-depth":3,"highlight-style":"github","number-sections":false,"output-file":"week_01_slides.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.31","ojs-engine":true,"revealjs-plugins":[],"theme":"cosmo","toc-location":"right","code-copy":true,"grid":{"sidebar-width":"350px"},"title":"Introduction to Coding and Data Analysis for Scientists","jupyter":"python3"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["live-html"]}
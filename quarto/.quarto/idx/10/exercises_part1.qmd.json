{"title":"Creating a mask containing a circle","markdown":{"yaml":{"title":"Creating a mask containing a circle","jupyter":"python3"},"headingText":"Pair programming: part 1","containsRefs":false,"markdown":"\n\n\n\n\nAs part of this activity you have been split into pairs/threes and are being asked to create code together using a technique called *pair programming*.\n\nFor this exercise, one of you will be writing the code (the **driver**) and the others will be directing and advising on what should be written (the **navigator(s)**) with lots of discussion in between. Decide between yourselves who would like each role to start with. For the second exercise  you will swap some of your roles but carry on working together in the same pairs/threes.\n\n## How a mask could be used\n\nIn this workbook, we want you to create a mask. By this we mean a square (or rectangular) grid of zeros (0s) and ones (1s) with values of 1 in the positions you want to keep and values of 0 in the positions you don't. This mask could then be applied to another image for example:\n\n<img src=\"images/Picture-before-mask.png\" alt=\"Picture before mask\" style=\"float:left;display:block;margin-left:auto;margin-right:auto;width:20%;padding-left:20%;padding-right:10%\"/>\n<img src=\"images/Picture-with-mask.png\" alt=\"Picture before mask\" style=\"float:left;display:block;margin-left:auto;margin-right:auto;width:20%;padding-left:10%;padding-right:20%\"/>\n\nWithin the mask the edge would look something like this:\n\n<img src=\"images/Zoom_in_edge_mask.png\" alt=\"Zoom in on edge of circle mask\" style=\"display:block;margin-left:auto;margin-right:auto;width:20%\"/>\n\nwhere the thin green line represents the edge of where the real circle would be.\n\n## Circle within a square\n\nThe mask we want you to create should represent a circle (defined within the grid). The equation governing the edge of a circle is:\n\n$$ (x-x_0)^2 + (y-y_0)^2 = r^2 $$\n\nwhere\n\n - $x$, $y$ are the x, y positions within the grid\n - $x_0$, $y_0$ are the centre of the circle\n - $r$ is the radius\n\nFor example, for a circle with radius of 2 with a centre point of (4, 3), if we looked at position (5, 4), then this would be inside that circle since:\n\n$$\\sqrt{((5 - 4)^2 + (4 - 3)^2)}$$\n$$ = \\sqrt{1^2 + 1^2} = \\sqrt{1 + 1} = \\sqrt{2} = 1.41$$\n\nwhich is less than the radius of 2.\n\n---\n\n### Exercise A\n\nCreate a 100 x 100 square grid containing a circle. The centre of the circle should be at position `x = 40`, `y = 50` and have a radius of 10. Call your output `circular_mask`.\n\n*Break this idea down into the different steps:*\n - *Start by creating an array - how could you create an array of the right shape?*\n - *How would you turn the equation above into code?*\n - *How would you evaluate one (x, y) position to start with?*\n - *How do you move on to evaluate every position?*\n - *...*\n\n**Important note**: For `numpy` remember that the axes are opposite to what you would expect for an x-y grid - they store data as *row-major* meaning you access the row as the first index (y) and the column as the second index (x). This means position `arr[1, 0]` would be at position (0, 1) in x, y co-ordinates rather than (1, 0) as you may expect.\n\nWhen completed, you can use the plotting code below to show your mask. This uses a `matplotlib` function called `imshow` ([documentation](https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.imshow.html); [example from image gallery](https://matplotlib.org/stable/gallery/images_contours_and_fields/image_demo.html)) which can plot your 2D data on a grid.\n\n```{python}\n# ADD CODE HERE\n\n\n```\n\n```{python}\n### UNCOMMENT THIS CODE TO PLOT YOUR MASK WHEN COMPLETED\n#\n#import matplotlib.pyplot as plt\n#\n#fig, ax = plt.subplots(figsize=(6, 3.2))\n#\n#ax.set_title('Circular Mask')\n#ax.imshow(circular_mask,cmap=\"bone\",origin=\"lower\") # Setting colourmap (cmap) and the position of 0,0 (origin) on the plot\n```\n\nTake time to discuss this but if you are really stuck, there is a [hint notebook](hint1_mask.qmd) available which shows how you would create a mask for a square rather than a circle as an example of how you could approach this.\n\n---\n\n*Extended*:\n\n1. Consider how you could create a mask for a rectangle rather than a circle (or a square)\n\n*More complex*:\n\n2. What are some other ways a mask could created using the features of `numpy`?\n - Look other numpy (`np`) functions e.g.\n    - `meshgrid()` - [link](https://numpy.org/doc/stable/reference/generated/numpy.meshgrid.html) (or `ogrid()` - [link](https://numpy.org/doc/stable/reference/generated/numpy.ogrid.html))\n    - `where()` - [link](https://numpy.org/doc/stable/reference/generated/numpy.where.html) functions.\n - Look at the more complex ways that `numpy.array` objects can be indexed - [indexing multi-dimensional arrays](https://numpy.org/doc/stable/user/basics.indexing.html#indexing-multi-dimensional-arrays)\n - Consider how values can be assigned to whole sections of an array directly.\n\n---\n\n","srcMarkdownNoYaml":"\n\n\n## Pair programming: part 1\n\n\nAs part of this activity you have been split into pairs/threes and are being asked to create code together using a technique called *pair programming*.\n\nFor this exercise, one of you will be writing the code (the **driver**) and the others will be directing and advising on what should be written (the **navigator(s)**) with lots of discussion in between. Decide between yourselves who would like each role to start with. For the second exercise  you will swap some of your roles but carry on working together in the same pairs/threes.\n\n## How a mask could be used\n\nIn this workbook, we want you to create a mask. By this we mean a square (or rectangular) grid of zeros (0s) and ones (1s) with values of 1 in the positions you want to keep and values of 0 in the positions you don't. This mask could then be applied to another image for example:\n\n<img src=\"images/Picture-before-mask.png\" alt=\"Picture before mask\" style=\"float:left;display:block;margin-left:auto;margin-right:auto;width:20%;padding-left:20%;padding-right:10%\"/>\n<img src=\"images/Picture-with-mask.png\" alt=\"Picture before mask\" style=\"float:left;display:block;margin-left:auto;margin-right:auto;width:20%;padding-left:10%;padding-right:20%\"/>\n\nWithin the mask the edge would look something like this:\n\n<img src=\"images/Zoom_in_edge_mask.png\" alt=\"Zoom in on edge of circle mask\" style=\"display:block;margin-left:auto;margin-right:auto;width:20%\"/>\n\nwhere the thin green line represents the edge of where the real circle would be.\n\n## Circle within a square\n\nThe mask we want you to create should represent a circle (defined within the grid). The equation governing the edge of a circle is:\n\n$$ (x-x_0)^2 + (y-y_0)^2 = r^2 $$\n\nwhere\n\n - $x$, $y$ are the x, y positions within the grid\n - $x_0$, $y_0$ are the centre of the circle\n - $r$ is the radius\n\nFor example, for a circle with radius of 2 with a centre point of (4, 3), if we looked at position (5, 4), then this would be inside that circle since:\n\n$$\\sqrt{((5 - 4)^2 + (4 - 3)^2)}$$\n$$ = \\sqrt{1^2 + 1^2} = \\sqrt{1 + 1} = \\sqrt{2} = 1.41$$\n\nwhich is less than the radius of 2.\n\n---\n\n### Exercise A\n\nCreate a 100 x 100 square grid containing a circle. The centre of the circle should be at position `x = 40`, `y = 50` and have a radius of 10. Call your output `circular_mask`.\n\n*Break this idea down into the different steps:*\n - *Start by creating an array - how could you create an array of the right shape?*\n - *How would you turn the equation above into code?*\n - *How would you evaluate one (x, y) position to start with?*\n - *How do you move on to evaluate every position?*\n - *...*\n\n**Important note**: For `numpy` remember that the axes are opposite to what you would expect for an x-y grid - they store data as *row-major* meaning you access the row as the first index (y) and the column as the second index (x). This means position `arr[1, 0]` would be at position (0, 1) in x, y co-ordinates rather than (1, 0) as you may expect.\n\nWhen completed, you can use the plotting code below to show your mask. This uses a `matplotlib` function called `imshow` ([documentation](https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.imshow.html); [example from image gallery](https://matplotlib.org/stable/gallery/images_contours_and_fields/image_demo.html)) which can plot your 2D data on a grid.\n\n```{python}\n# ADD CODE HERE\n\n\n```\n\n```{python}\n### UNCOMMENT THIS CODE TO PLOT YOUR MASK WHEN COMPLETED\n#\n#import matplotlib.pyplot as plt\n#\n#fig, ax = plt.subplots(figsize=(6, 3.2))\n#\n#ax.set_title('Circular Mask')\n#ax.imshow(circular_mask,cmap=\"bone\",origin=\"lower\") # Setting colourmap (cmap) and the position of 0,0 (origin) on the plot\n```\n\nTake time to discuss this but if you are really stuck, there is a [hint notebook](hint1_mask.qmd) available which shows how you would create a mask for a square rather than a circle as an example of how you could approach this.\n\n---\n\n*Extended*:\n\n1. Consider how you could create a mask for a rectangle rather than a circle (or a square)\n\n*More complex*:\n\n2. What are some other ways a mask could created using the features of `numpy`?\n - Look other numpy (`np`) functions e.g.\n    - `meshgrid()` - [link](https://numpy.org/doc/stable/reference/generated/numpy.meshgrid.html) (or `ogrid()` - [link](https://numpy.org/doc/stable/reference/generated/numpy.ogrid.html))\n    - `where()` - [link](https://numpy.org/doc/stable/reference/generated/numpy.where.html) functions.\n - Look at the more complex ways that `numpy.array` objects can be indexed - [indexing multi-dimensional arrays](https://numpy.org/doc/stable/user/basics.indexing.html#indexing-multi-dimensional-arrays)\n - Consider how values can be assigned to whole sections of an array directly.\n\n---\n\n"},"formats":{"live-html":{"identifier":{"display-name":"HTML","target-format":"live-html","base-format":"html","extension-name":"live"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":true,"eval":true,"cache":true,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[],"notebook-links":true,"shortcodes":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","filters":["/Users/ft14968/Repos/intro-coding-data-analysis/quarto/_extensions/r-wasm/live/live.lua"],"include-in-header":{"text":"<meta name=\"robots\" content=\"noindex, nofollow\">\n"},"css":["../styles.css"],"toc":true,"toc-depth":3,"highlight-style":"github","number-sections":false,"output-file":"exercises_part1.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.31","ojs-engine":true,"revealjs-plugins":[],"theme":"cosmo","toc-location":"right","code-copy":true,"grid":{"sidebar-width":"350px"},"title":"Creating a mask containing a circle","jupyter":"python3"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["live-html"]}
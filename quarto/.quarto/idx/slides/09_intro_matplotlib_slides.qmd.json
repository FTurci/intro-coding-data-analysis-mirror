{"title":"Plotting with `matplotlib`","markdown":{"yaml":{"title":"Plotting with `matplotlib`","format":{"revealjs":{"theme":"default","highlight-style":"github","code-block-bg":true,"code-block-border-left":"#31BAE9","code-copy":true,"code-overflow":"wrap"}},"execute":{"echo":true,"eval":true,"warning":false,"fig-width":8,"fig-height":5}},"headingText":"Introduction to matplotlib","containsRefs":false,"markdown":"\n\n\n**matplotlib** - Powerful Python library for creating visualizations\n\n```{python}\nimport matplotlib.pyplot as plt\nimport numpy as np\n```\n\n**Key concepts:**\n- **Figure**: The canvas\n- **Axes**: The x-y plotting area\n- **Object-oriented** approach (recommended)\n\n```{python}\nfig, ax = plt.subplots()  # Create figure and axes\n```\n\n---\n\n## Two Plotting Approaches\n\n**Pyplot (MATLAB-style):**\n```python\nplt.plot(x, y)  # Direct plotting\n```\n\n**Object-oriented (Recommended):**\n```{python}\nfig, ax = plt.subplots()\nax.plot(x, y)  # Plot using axes object\n```\n\n**Why object-oriented?**\n- More explicit control\n- Better for complex plots\n- Modern best practice\n\n---\n\n## Basic Plot Types\n\n```{python}\n# Sample data\nrng = np.random.default_rng(seed=124)\nx = np.arange(1, 20, 2)\ny1 = x**2\ny2 = x**2 + rng.normal(size=len(x))*50\n\nfig, ax = plt.subplots()\nax.plot(x, y1, label=\"Line plot\")        # Line plot\nax.scatter(x, y2, label=\"Scatter plot\")  # Scatter plot\nax.legend()\n```\n\n---\n\n## Customizing Appearance\n\n```{python}\nfig, ax = plt.subplots(figsize=(8, 4))\n\n# Styling options\nax.plot(x, y1, color=\"slategrey\", linestyle=\"--\", linewidth=2)\nax.scatter(x, y2, color=\"indianred\", marker='+', s=60)\n\n# Labels and limits\nax.set_xlabel(\"X values\")\nax.set_ylabel(\"Y values\")\nax.set_xlim(0, 20)\nax.set_title(\"Customized Plot\")\n```\n\n---\n\n## Common Style Options\n\n**Colors:** Named colors, hex codes, RGB\n- `color=\"red\"`, `color=\"#FF0000\"`, `color=(1,0,0)`\n\n**Line styles:** \n- `linestyle=\"-\"` (solid), `\"--\"` (dashed), `\":\"` (dotted)\n\n**Markers:**\n- `marker=\"o\"` (circle), `\"+\"` (plus), `\"^\"` (triangle)\n\n**Transparency:**\n- `alpha=0.7` (70% opaque)\n\n---\n\n## Legends and Annotations\n\n```{python}\nfig, ax = plt.subplots()\n\nax.plot(x, y1, label=\"Fitted line\", color=\"blue\", linestyle=\"--\")\nax.scatter(x, y2, label=\"Measurements\", color=\"red\", marker='o')\n\nax.set_xlabel(\"x\")\nax.set_ylabel(\"y\") \nax.legend()  # Uses the label parameters\nax.set_title(\"Plot with Legend\")\n```\n\n---\n\n## Histograms\n\n```{python}\n# Generate random data\nrng = np.random.default_rng(seed=68)\ndata1 = rng.normal(0, 1, 5000)\ndata2 = rng.normal(1, 1.5, 1000)\n\nfig, ax = plt.subplots()\nbins = np.arange(-4, 6, 0.3)\n\nax.hist(data1, bins=bins, alpha=0.7, color=\"skyblue\", \n        density=True, label=\"Dataset 1\")\nax.hist(data2, bins=bins, alpha=0.7, color=\"orange\", \n        density=True, label=\"Dataset 2\")\n\nax.set_xlabel(\"Value\")\nax.set_ylabel(\"Density\")\nax.legend()\n```\n\n---\n\n## Histogram Options\n\n**Key parameters:**\n- `bins`: Number or explicit bin edges\n- `alpha`: Transparency (0-1)\n- `density`: Normalize to show probability density\n- `histtype`: 'bar', 'step', 'stepfilled'\n\n```{python}\nfig, ax = plt.subplots()\nax.hist(data1, bins=30, alpha=0.6, histtype='step', \n        color='purple', linewidth=2)\n```\n\n---\n\n## Multiple Plots on Same Axes\n\n```{python}\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Multiple data series\nx_vals = np.linspace(0, 2*np.pi, 100)\ny1 = np.sin(x_vals)\ny2 = np.cos(x_vals)\ny3 = np.sin(2*x_vals)\n\nax.plot(x_vals, y1, label=\"sin(x)\")\nax.plot(x_vals, y2, label=\"cos(x)\", linestyle='--')\nax.scatter(x_vals[::10], y3[::10], label=\"sin(2x)\", marker='o')\n\nax.legend()\nax.set_xlabel(\"x\")\nax.set_ylabel(\"y\")\n```\n\n---\n\n## Anatomy of a Figure\n\n![Matplotlib anatomy shows the components: Figure, Axes, Labels, Legend, Ticks, etc.](images/anatomy_example.png){width=60%}\n\n**Key components:**\n- **Figure**: Overall container\n- **Axes**: Plot area with data\n- **Axis labels**: x/y descriptions  \n- **Ticks**: Scale markers\n- **Legend**: Data series identification\n\n---\n\n## Figure Size and Layout\n\n```{python}\n# Control figure size\nfig, ax = plt.subplots(figsize=(12, 6))\n\n# Multiple subplots (brief example)\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 5))\nax1.plot([1, 2, 3], [1, 4, 2])\nax2.scatter([1, 2, 3], [2, 1, 3])\nax1.set_title(\"Plot 1\")\nax2.set_title(\"Plot 2\")\n```\n\n---\n\n## Best Practices\n\n- **Always** label your axes\n- **Use legends** for multiple data series\n- **Choose appropriate** plot types for your data\n- **Control figure size** for readability\n- **Use colors wisely** - consider colorblind accessibility\n- **Keep it simple** - don't over-decorate\n\n```{python}\n# Good example\nfig, ax = plt.subplots(figsize=(8, 5))\nax.plot(x, y1, label=\"Data\")\nax.set_xlabel(\"Time (s)\")\nax.set_ylabel(\"Amplitude (V)\")\nax.set_title(\"Signal vs Time\")\nax.legend()\n```\n\n---\n\n## Key Takeaways\n\n- **matplotlib** is the standard Python plotting library\n- **Object-oriented** approach with `fig, ax` is recommended\n- **Customization** options for colors, styles, markers\n- **Multiple plot types**: line, scatter, histogram\n- **Always annotate** with labels, legends, titles\n- **Practice** with different plot types and styling options\n","srcMarkdownNoYaml":"\n\n## Introduction to matplotlib\n\n**matplotlib** - Powerful Python library for creating visualizations\n\n```{python}\nimport matplotlib.pyplot as plt\nimport numpy as np\n```\n\n**Key concepts:**\n- **Figure**: The canvas\n- **Axes**: The x-y plotting area\n- **Object-oriented** approach (recommended)\n\n```{python}\nfig, ax = plt.subplots()  # Create figure and axes\n```\n\n---\n\n## Two Plotting Approaches\n\n**Pyplot (MATLAB-style):**\n```python\nplt.plot(x, y)  # Direct plotting\n```\n\n**Object-oriented (Recommended):**\n```{python}\nfig, ax = plt.subplots()\nax.plot(x, y)  # Plot using axes object\n```\n\n**Why object-oriented?**\n- More explicit control\n- Better for complex plots\n- Modern best practice\n\n---\n\n## Basic Plot Types\n\n```{python}\n# Sample data\nrng = np.random.default_rng(seed=124)\nx = np.arange(1, 20, 2)\ny1 = x**2\ny2 = x**2 + rng.normal(size=len(x))*50\n\nfig, ax = plt.subplots()\nax.plot(x, y1, label=\"Line plot\")        # Line plot\nax.scatter(x, y2, label=\"Scatter plot\")  # Scatter plot\nax.legend()\n```\n\n---\n\n## Customizing Appearance\n\n```{python}\nfig, ax = plt.subplots(figsize=(8, 4))\n\n# Styling options\nax.plot(x, y1, color=\"slategrey\", linestyle=\"--\", linewidth=2)\nax.scatter(x, y2, color=\"indianred\", marker='+', s=60)\n\n# Labels and limits\nax.set_xlabel(\"X values\")\nax.set_ylabel(\"Y values\")\nax.set_xlim(0, 20)\nax.set_title(\"Customized Plot\")\n```\n\n---\n\n## Common Style Options\n\n**Colors:** Named colors, hex codes, RGB\n- `color=\"red\"`, `color=\"#FF0000\"`, `color=(1,0,0)`\n\n**Line styles:** \n- `linestyle=\"-\"` (solid), `\"--\"` (dashed), `\":\"` (dotted)\n\n**Markers:**\n- `marker=\"o\"` (circle), `\"+\"` (plus), `\"^\"` (triangle)\n\n**Transparency:**\n- `alpha=0.7` (70% opaque)\n\n---\n\n## Legends and Annotations\n\n```{python}\nfig, ax = plt.subplots()\n\nax.plot(x, y1, label=\"Fitted line\", color=\"blue\", linestyle=\"--\")\nax.scatter(x, y2, label=\"Measurements\", color=\"red\", marker='o')\n\nax.set_xlabel(\"x\")\nax.set_ylabel(\"y\") \nax.legend()  # Uses the label parameters\nax.set_title(\"Plot with Legend\")\n```\n\n---\n\n## Histograms\n\n```{python}\n# Generate random data\nrng = np.random.default_rng(seed=68)\ndata1 = rng.normal(0, 1, 5000)\ndata2 = rng.normal(1, 1.5, 1000)\n\nfig, ax = plt.subplots()\nbins = np.arange(-4, 6, 0.3)\n\nax.hist(data1, bins=bins, alpha=0.7, color=\"skyblue\", \n        density=True, label=\"Dataset 1\")\nax.hist(data2, bins=bins, alpha=0.7, color=\"orange\", \n        density=True, label=\"Dataset 2\")\n\nax.set_xlabel(\"Value\")\nax.set_ylabel(\"Density\")\nax.legend()\n```\n\n---\n\n## Histogram Options\n\n**Key parameters:**\n- `bins`: Number or explicit bin edges\n- `alpha`: Transparency (0-1)\n- `density`: Normalize to show probability density\n- `histtype`: 'bar', 'step', 'stepfilled'\n\n```{python}\nfig, ax = plt.subplots()\nax.hist(data1, bins=30, alpha=0.6, histtype='step', \n        color='purple', linewidth=2)\n```\n\n---\n\n## Multiple Plots on Same Axes\n\n```{python}\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Multiple data series\nx_vals = np.linspace(0, 2*np.pi, 100)\ny1 = np.sin(x_vals)\ny2 = np.cos(x_vals)\ny3 = np.sin(2*x_vals)\n\nax.plot(x_vals, y1, label=\"sin(x)\")\nax.plot(x_vals, y2, label=\"cos(x)\", linestyle='--')\nax.scatter(x_vals[::10], y3[::10], label=\"sin(2x)\", marker='o')\n\nax.legend()\nax.set_xlabel(\"x\")\nax.set_ylabel(\"y\")\n```\n\n---\n\n## Anatomy of a Figure\n\n![Matplotlib anatomy shows the components: Figure, Axes, Labels, Legend, Ticks, etc.](images/anatomy_example.png){width=60%}\n\n**Key components:**\n- **Figure**: Overall container\n- **Axes**: Plot area with data\n- **Axis labels**: x/y descriptions  \n- **Ticks**: Scale markers\n- **Legend**: Data series identification\n\n---\n\n## Figure Size and Layout\n\n```{python}\n# Control figure size\nfig, ax = plt.subplots(figsize=(12, 6))\n\n# Multiple subplots (brief example)\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 5))\nax1.plot([1, 2, 3], [1, 4, 2])\nax2.scatter([1, 2, 3], [2, 1, 3])\nax1.set_title(\"Plot 1\")\nax2.set_title(\"Plot 2\")\n```\n\n---\n\n## Best Practices\n\n- **Always** label your axes\n- **Use legends** for multiple data series\n- **Choose appropriate** plot types for your data\n- **Control figure size** for readability\n- **Use colors wisely** - consider colorblind accessibility\n- **Keep it simple** - don't over-decorate\n\n```{python}\n# Good example\nfig, ax = plt.subplots(figsize=(8, 5))\nax.plot(x, y1, label=\"Data\")\nax.set_xlabel(\"Time (s)\")\nax.set_ylabel(\"Amplitude (V)\")\nax.set_title(\"Signal vs Time\")\nax.legend()\n```\n\n---\n\n## Key Takeaways\n\n- **matplotlib** is the standard Python plotting library\n- **Object-oriented** approach with `fig, ax` is recommended\n- **Customization** options for colors, styles, markers\n- **Multiple plot types**: line, scatter, histogram\n- **Always annotate** with labels, legends, titles\n- **Practice** with different plot types and styling options\n"},"formats":{"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":8,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":true,"eval":true,"cache":true,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.9/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","highlight-style":"github","output-file":"09_intro_matplotlib_slides.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.7.31","auto-stretch":true,"title":"Plotting with `matplotlib`","theme":"default","code-block-bg":true,"code-block-border-left":"#31BAE9","code-copy":true}}},"projectFormats":["live-html"]}
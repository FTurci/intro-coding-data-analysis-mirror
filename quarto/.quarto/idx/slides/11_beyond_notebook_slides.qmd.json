{"title":"Beyond the Notebook","markdown":{"yaml":{"title":"Beyond the Notebook","format":{"revealjs":{"theme":"default","highlight-style":"github","code-block-bg":true,"code-block-border-left":"#31BAE9","code-copy":true,"code-overflow":"wrap"}},"execute":{"echo":true,"eval":false,"warning":false}},"headingText":"File System Navigation","containsRefs":false,"markdown":"\n\n\n**Notebooks exist in directories** - we can navigate using bash commands\n\n**Key commands (use `!` prefix in notebooks):**\n```python\n# Current directory location\n! pwd\n\n# List files and directories\n! ls\n\n# Create new directory\n! mkdir new_folder\n\n# Change directory\n! cd new_folder\n! cd ..  # Go back to parent directory\n```\n\n---\n\n## Working with Files\n\n**Creating and viewing files:**\n```python\n# Create empty file\n! touch filename.txt\n\n# View file contents\n! cat filename.txt\n\n# View first/last lines\n! head filename.txt\n! tail filename.txt\n```\n\n**File system navigation:**\n- `.` = current directory\n- `..` = parent directory\n- Paths can be absolute (`/full/path`) or relative (`folder/file`)\n\n---\n\n## Python Scripts vs Notebooks\n\n**Notebooks (.ipynb):**\n- Rich multimedia content\n- Markdown, images, metadata\n- Interactive development\n- Complex file format\n\n**Scripts (.py):**\n- Pure Python code only\n- Comments with `#`\n- Simple text files\n- Portable and lightweight\n\n---\n\n## Running Scripts\n\n**From notebook:**\n```python\n# Using the 'run' magic command\nrun path/to/script.py\n```\n\n**From terminal:**\n```bash\n# Using python command\npython path/to/script.py\n```\n\n**Example script (`hello.py`):**\n```python\nprint(\"Hello, World!\")\nx = 42\nprint(f\"The answer is {x}\")\n```\n\n---\n\n## The Terminal\n\n**Text-based interface** to the operating system\n\n**Accessing terminal:**\n- In Noteable: New → Terminal\n- Pure command-line environment\n- No mouse interaction\n- Uses bash scripting language\n\n**Basic terminal workflow:**\n1. Navigate to directory (`cd`)\n2. Create/edit files (`touch`, text editor)\n3. Run Python scripts (`python script.py`)\n\n---\n\n## Creating Python Modules\n\n**Scripts can be imported as modules:**\n\n**Step 1:** Create `math_utils.py`:\n```python\ndef add_numbers(a, b):\n    return a + b\n\ndef square(x):\n    return x ** 2\n\nPI = 3.14159\n```\n\n**Step 2:** Import and use:\n```python\nimport math_utils as mu\n\nresult = mu.add_numbers(5, 3)\narea = mu.PI * mu.square(radius)\n```\n\n---\n\n## Practical Example: Plotting Module\n\n**Create `plotting.py`:**\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef plot_parabola(a, b, c, xlo=0, xhi=10, npoints=100):\n    x = np.linspace(xlo, xhi, npoints)\n    y = a * x**2 + b * x + c\n    \n    plt.figure()\n    plt.plot(x, y, 'b-', linewidth=2)\n    plt.xlabel('x')\n    plt.ylabel('y')\n    plt.title(f'Parabola: y = {a}x² + {b}x + {c}')\n    plt.grid(True)\n    plt.show()\n```\n\n---\n\n## Using Custom Modules\n\n**Import your module:**\n```python\nimport plotting as plt_mod\n\n# Use your custom function\nplt_mod.plot_parabola(a=1, b=-2, c=1)\n```\n\n**Benefits of modules:**\n- **Reusability:** Use same code across projects\n- **Organization:** Separate concerns\n- **Maintainability:** Update code in one place\n- **Collaboration:** Share functionality\n\n---\n\n## Bash Command Options\n\n**Commands often have options using `-` syntax:**\n\n```bash\n# List files in long format\nls -l\n\n# List files in reverse time order\nls -lt\n\n# Get help for any command\ncommand_name --help\n```\n\n**Common file operations:**\n```bash\n# Move/rename files\nmv old_name.py new_name.py\n\n# Copy files\ncp source.py destination.py\n\n# Remove files (careful!)\nrm filename.py\n```\n\n---\n\n## Script vs. Notebook Output\n\n**Notebook execution:**\n- Output appears inline\n- Variables remain in memory\n- Interactive environment\n\n**Script execution:**\n- Output goes to terminal/file\n- No persistent variables\n- One-time execution\n- For plots: use `plt.savefig()` instead of `plt.show()`\n\n---\n\n## Best Practices\n\n**When to use scripts:**\n- Reusable functions\n- Production code\n- Automated tasks\n- Sharing with others\n\n**When to use notebooks:**\n- Exploratory analysis\n- Documentation with results\n- Teaching/presentations\n- Prototyping\n\n**Module organization:**\n- Group related functions\n- Clear, descriptive names\n- Add docstrings to functions\n\n---\n\n## Key Takeaways\n\n- **File system** navigation with bash commands\n- **Scripts** are portable, reusable Python code\n- **Terminal** provides direct system access\n- **Modules** enable code organization and reuse\n- **Choose the right tool:** notebooks for exploration, scripts for production\n- **Practice** using both environments effectively\n\n**Next steps:** Start organizing your code into reusable modules!\n","srcMarkdownNoYaml":"\n\n## File System Navigation\n\n**Notebooks exist in directories** - we can navigate using bash commands\n\n**Key commands (use `!` prefix in notebooks):**\n```python\n# Current directory location\n! pwd\n\n# List files and directories\n! ls\n\n# Create new directory\n! mkdir new_folder\n\n# Change directory\n! cd new_folder\n! cd ..  # Go back to parent directory\n```\n\n---\n\n## Working with Files\n\n**Creating and viewing files:**\n```python\n# Create empty file\n! touch filename.txt\n\n# View file contents\n! cat filename.txt\n\n# View first/last lines\n! head filename.txt\n! tail filename.txt\n```\n\n**File system navigation:**\n- `.` = current directory\n- `..` = parent directory\n- Paths can be absolute (`/full/path`) or relative (`folder/file`)\n\n---\n\n## Python Scripts vs Notebooks\n\n**Notebooks (.ipynb):**\n- Rich multimedia content\n- Markdown, images, metadata\n- Interactive development\n- Complex file format\n\n**Scripts (.py):**\n- Pure Python code only\n- Comments with `#`\n- Simple text files\n- Portable and lightweight\n\n---\n\n## Running Scripts\n\n**From notebook:**\n```python\n# Using the 'run' magic command\nrun path/to/script.py\n```\n\n**From terminal:**\n```bash\n# Using python command\npython path/to/script.py\n```\n\n**Example script (`hello.py`):**\n```python\nprint(\"Hello, World!\")\nx = 42\nprint(f\"The answer is {x}\")\n```\n\n---\n\n## The Terminal\n\n**Text-based interface** to the operating system\n\n**Accessing terminal:**\n- In Noteable: New → Terminal\n- Pure command-line environment\n- No mouse interaction\n- Uses bash scripting language\n\n**Basic terminal workflow:**\n1. Navigate to directory (`cd`)\n2. Create/edit files (`touch`, text editor)\n3. Run Python scripts (`python script.py`)\n\n---\n\n## Creating Python Modules\n\n**Scripts can be imported as modules:**\n\n**Step 1:** Create `math_utils.py`:\n```python\ndef add_numbers(a, b):\n    return a + b\n\ndef square(x):\n    return x ** 2\n\nPI = 3.14159\n```\n\n**Step 2:** Import and use:\n```python\nimport math_utils as mu\n\nresult = mu.add_numbers(5, 3)\narea = mu.PI * mu.square(radius)\n```\n\n---\n\n## Practical Example: Plotting Module\n\n**Create `plotting.py`:**\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef plot_parabola(a, b, c, xlo=0, xhi=10, npoints=100):\n    x = np.linspace(xlo, xhi, npoints)\n    y = a * x**2 + b * x + c\n    \n    plt.figure()\n    plt.plot(x, y, 'b-', linewidth=2)\n    plt.xlabel('x')\n    plt.ylabel('y')\n    plt.title(f'Parabola: y = {a}x² + {b}x + {c}')\n    plt.grid(True)\n    plt.show()\n```\n\n---\n\n## Using Custom Modules\n\n**Import your module:**\n```python\nimport plotting as plt_mod\n\n# Use your custom function\nplt_mod.plot_parabola(a=1, b=-2, c=1)\n```\n\n**Benefits of modules:**\n- **Reusability:** Use same code across projects\n- **Organization:** Separate concerns\n- **Maintainability:** Update code in one place\n- **Collaboration:** Share functionality\n\n---\n\n## Bash Command Options\n\n**Commands often have options using `-` syntax:**\n\n```bash\n# List files in long format\nls -l\n\n# List files in reverse time order\nls -lt\n\n# Get help for any command\ncommand_name --help\n```\n\n**Common file operations:**\n```bash\n# Move/rename files\nmv old_name.py new_name.py\n\n# Copy files\ncp source.py destination.py\n\n# Remove files (careful!)\nrm filename.py\n```\n\n---\n\n## Script vs. Notebook Output\n\n**Notebook execution:**\n- Output appears inline\n- Variables remain in memory\n- Interactive environment\n\n**Script execution:**\n- Output goes to terminal/file\n- No persistent variables\n- One-time execution\n- For plots: use `plt.savefig()` instead of `plt.show()`\n\n---\n\n## Best Practices\n\n**When to use scripts:**\n- Reusable functions\n- Production code\n- Automated tasks\n- Sharing with others\n\n**When to use notebooks:**\n- Exploratory analysis\n- Documentation with results\n- Teaching/presentations\n- Prototyping\n\n**Module organization:**\n- Group related functions\n- Clear, descriptive names\n- Add docstrings to functions\n\n---\n\n## Key Takeaways\n\n- **File system** navigation with bash commands\n- **Scripts** are portable, reusable Python code\n- **Terminal** provides direct system access\n- **Modules** enable code organization and reuse\n- **Choose the right tool:** notebooks for exploration, scripts for production\n- **Practice** using both environments effectively\n\n**Next steps:** Start organizing your code into reusable modules!\n"},"formats":{"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":true,"eval":false,"cache":true,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.9/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","highlight-style":"github","output-file":"11_beyond_notebook_slides.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.7.31","auto-stretch":true,"title":"Beyond the Notebook","theme":"default","code-block-bg":true,"code-block-border-left":"#31BAE9","code-copy":true}}},"projectFormats":["live-html"]}